[{"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\index.tsx":"1","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Preview.tsx":"2","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\components\\Navigation.tsx":"3","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\serviceWorkerRegistration.ts":"4","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\api\\index.ts":"5","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\App.tsx":"6","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Files.tsx":"7","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\img\\filetypes\\index.ts":"8","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\App.js":"9","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\hooks\\index.ts":"10","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\index.js":"11","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\api\\index.js":"12","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Files.js":"13"},{"size":911,"mtime":1611657693486,"results":"14","hashOfConfig":"15"},{"size":1735,"mtime":1611544335430,"results":"16","hashOfConfig":"15"},{"size":857,"mtime":1611735416518,"results":"17","hashOfConfig":"15"},{"size":5256,"mtime":1611295053101,"results":"18","hashOfConfig":"15"},{"size":1983,"mtime":1611657381607,"results":"19","hashOfConfig":"15"},{"size":939,"mtime":1611727704157,"results":"20","hashOfConfig":"15"},{"size":5756,"mtime":1611657784190,"results":"21","hashOfConfig":"15"},{"size":637,"mtime":1611644088975,"results":"22","hashOfConfig":"15"},{"size":1216,"mtime":1611727724755,"results":"23","hashOfConfig":"15"},{"size":1244,"mtime":1611648279820,"results":"24","hashOfConfig":"15"},{"size":1469,"mtime":1611727725413,"results":"25","hashOfConfig":"15"},{"size":4460,"mtime":1611727723668,"results":"26","hashOfConfig":"15"},{"size":9371,"mtime":1611727724359,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10w9nnf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57"},"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\index.tsx",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Preview.tsx",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\components\\Navigation.tsx",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\serviceWorkerRegistration.ts",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\api\\index.ts",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\App.tsx",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Files.tsx",["58","59"],"import * as React from 'react';\r\nimport {useState,useEffect}  from 'react'\r\nimport { useRouter } from '../hooks'\r\nimport * as FileIcons from '../img/filetypes';\r\nimport { IBreadcrumbProps,Card, Elevation, Breadcrumbs, Boundary, Spinner, Intent, Alert } from \"@blueprintjs/core\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFiles, FileInfo, FileType } from '../api'\r\ninterface FileParms {\r\n    baseId: string,\r\n    id: string\r\n}\r\n\r\ninterface FileTableProps {\r\n    loading: boolean,\r\n    children: Array<FileInfo>\r\n}\r\ninterface FileSizeProps {\r\n    size: number\r\n}\r\nfunction FilesTable(props: FileTableProps) {\r\n    const router = useRouter();\r\n    function fileItemClicked(item: FileInfo) {\r\n        if (item.type === FileType.Directory) {\r\n            router.push(`/files/${item.baseId}/${item.id}`);\r\n        } else {\r\n\r\n        }\r\n    }\r\n    if (props.loading) {\r\n        return <Spinner intent={Intent.NONE} size={Spinner.SIZE_STANDARD} />\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                {props.children.map((file: FileInfo) =>\r\n                    <Card interactive={true} elevation={Elevation.TWO} key={file.id}>\r\n                        <div className=\"grid\" onClick={() => fileItemClicked(file)}>\r\n                            <div className=\"grid-cell u3\">\r\n                                {renderFileImage(file.ext, file.type === FileType.Directory)}\r\n                            </div>\r\n                            <div className=\"grid-cell u17\">\r\n                                <span className=\"filename\">{file.name}</span>\r\n                            </div>\r\n                            <div className=\"grid-cell u4\">\r\n                                <FileSize size={file.size} />\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nfunction FileSize({ size }: FileSizeProps) {\r\n    if (size > 0) {\r\n        const sizeName = [\"b\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n        let num = 0;\r\n        while (size > 1024 && num < 5) {\r\n            size = size / 1024;\r\n            num++;\r\n        }\r\n        if (num < 1) {\r\n            num = 1;\r\n            size = 1;\r\n        }\r\n        return <span className=\"filesize\">{Math.round(size * 100) / 100 + \" \" + sizeName[num]}</span>;\r\n    } else {\r\n        return <span className=\"filesize\"></span>;\r\n    }\r\n}\r\nfunction renderFileImage(type: string, isDirectory: boolean) {\r\n    let icon = FileIcons.file;\r\n    if (isDirectory) {\r\n        icon = FileIcons.folder;\r\n    } else {\r\n        if (type === 'mp4') {\r\n            icon = FileIcons.mp4;\r\n        } else if (type === 'avi') {\r\n            icon = FileIcons.avi;\r\n        } else if (type === 'exe') {\r\n            icon = FileIcons.exe;\r\n        } else if (type === 'png' || type === 'jpg' || type === 'svg') {\r\n            icon = FileIcons.jpg;\r\n        } else if (type === 'html' || type === 'htm') {\r\n            icon = FileIcons.html\r\n        } else if (type === 'pdf') {\r\n            icon = FileIcons.pdf\r\n        } else if (type === 'doc' || type === 'docx') {\r\n            icon = FileIcons.doc\r\n        } else if (type === 'ppt' || type === 'pptx') {\r\n            icon = FileIcons.ppt\r\n        } else if (type === 'xls' || type === 'xlsx') {\r\n            icon = FileIcons.xls\r\n        } else if (type === 'mp3') {\r\n            icon = FileIcons.mp3\r\n        } else if (type === 'json') {\r\n            icon = FileIcons.json\r\n        } else if (type === 'txt') {\r\n            icon = FileIcons.txt\r\n        } else if (type === 'zip' || type === 'gz' || type === 'rar' || type === 'tar') {\r\n            icon = FileIcons.zip\r\n        }\r\n    }\r\n    return <img src={icon} className=\"fileicon\" />\r\n}\r\n\r\nexport default function Files() {\r\n    const parm = useParams<FileParms>();\r\n    const [error, setError] = useState({ error: false, errorMessage: '' })\r\n    const [breadItems, setBreadItems] = useState<Array<IBreadcrumbProps>>([])\r\n    const [data, setData] = useState<FileTableProps>({\r\n        loading: false,\r\n        children: []\r\n    })\r\n    async function fetchFiles() {\r\n        try{\r\n            let res = await getFiles(parm.baseId, parm.id);\r\n            setData({\r\n                loading: false,\r\n                children: res.children\r\n            })\r\n            setError({\r\n                error: false,\r\n                errorMessage: ''\r\n            })\r\n            setBreadItems([{ icon: \"folder-open\", text: res.cwd.name, current: true }])\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n                console.log(typeof err)\r\n                setError({\r\n                    error: true,\r\n                    errorMessage: err\r\n                })\r\n                setData({\r\n                    loading: false,\r\n                    children: []\r\n                })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setData((d) => {\r\n            return {\r\n                loading: false,\r\n                children: d.children\r\n            }\r\n        });\r\n        fetchFiles();      \r\n    }, [parm.baseId, parm.id])\r\n    return (\r\n        <React.Fragment>\r\n            <Alert\r\n                confirmButtonText=\"好的\"\r\n                isOpen={error.error}\r\n                onClose={() => setError({ error: false, errorMessage: '' })}\r\n            >\r\n                <p>\r\n                    {error.errorMessage}\r\n                </p>\r\n            </Alert>\r\n            <Card elevation={0} style={{ width: `100%` }}>\r\n                <Breadcrumbs\r\n                    collapseFrom={Boundary.START}\r\n                    items={breadItems}\r\n                />\r\n            </Card>\r\n            <FilesTable {...data} />\r\n        </React.Fragment>\r\n    );\r\n}","D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\img\\filetypes\\index.ts",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\App.js",["60"],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\hooks\\index.ts",[],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\index.js",["61"],"\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nrequire(\"./index.css\");\r\nvar App_1 = require(\"./App\");\r\nvar serviceWorkerRegistration = require(\"./serviceWorkerRegistration\");\r\nvar reportWebVitals_1 = require(\"./reportWebVitals\");\r\nvar api_1 = require(\"./api/\");\r\napi_1.getRoot().then(function (res) {\r\n    ReactDOM.render(React.createElement(App_1.default, __assign({}, res)), document.getElementById('root'));\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://cra.link/PWA\r\n    serviceWorkerRegistration.unregister();\r\n    // If you want to start measuring performance in your app, pass a function\r\n    // to log results (for example: reportWebVitals(console.log))\r\n    // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n    reportWebVitals_1.default();\r\n});\r\n//# sourceMappingURL=index.js.map",["62","63"],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\api\\index.js",["64","65","66","67","68","69"],"D:\\codes\\NCloud\\Src\\NCloud.React\\react-app\\src\\pages\\Files.js",["70","71","72","73","74","75"],"\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_1 = require(\"react\");\r\nvar hooks_1 = require(\"../hooks\");\r\nvar FileIcons = require(\"../img/filetypes\");\r\nvar core_1 = require(\"@blueprintjs/core\");\r\nvar react_router_dom_1 = require(\"react-router-dom\");\r\nvar api_1 = require(\"../api\");\r\nfunction FilesTable(props) {\r\n    var router = hooks_1.useRouter();\r\n    function fileItemClicked(item) {\r\n        if (item.type === api_1.FileType.Directory) {\r\n            router.push(\"/files/\" + item.baseId + \"/\" + item.id);\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    if (props.loading) {\r\n        return React.createElement(core_1.Spinner, { intent: core_1.Intent.NONE, size: core_1.Spinner.SIZE_STANDARD });\r\n    }\r\n    else {\r\n        return (React.createElement(React.Fragment, null, props.children.map(function (file) {\r\n            return React.createElement(core_1.Card, { interactive: true, elevation: core_1.Elevation.TWO, key: file.id },\r\n                React.createElement(\"div\", { className: \"grid\", onClick: function () { return fileItemClicked(file); } },\r\n                    React.createElement(\"div\", { className: \"grid-cell u3\" }, renderFileImage(file.ext, file.type === api_1.FileType.Directory)),\r\n                    React.createElement(\"div\", { className: \"grid-cell u17\" },\r\n                        React.createElement(\"span\", { className: \"filename\" }, file.name)),\r\n                    React.createElement(\"div\", { className: \"grid-cell u4\" },\r\n                        React.createElement(FileSize, { size: file.size }))));\r\n        })));\r\n    }\r\n}\r\nfunction FileSize(_a) {\r\n    var size = _a.size;\r\n    if (size > 0) {\r\n        var sizeName = [\"b\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n        var num = 0;\r\n        while (size > 1024 && num < 5) {\r\n            size = size / 1024;\r\n            num++;\r\n        }\r\n        if (num < 1) {\r\n            num = 1;\r\n            size = 1;\r\n        }\r\n        return React.createElement(\"span\", { className: \"filesize\" }, Math.round(size * 100) / 100 + \" \" + sizeName[num]);\r\n    }\r\n    else {\r\n        return React.createElement(\"span\", { className: \"filesize\" });\r\n    }\r\n}\r\nfunction renderFileImage(type, isDirectory) {\r\n    var icon = FileIcons.file;\r\n    if (isDirectory) {\r\n        icon = FileIcons.folder;\r\n    }\r\n    else {\r\n        if (type === 'mp4') {\r\n            icon = FileIcons.mp4;\r\n        }\r\n        else if (type === 'avi') {\r\n            icon = FileIcons.avi;\r\n        }\r\n        else if (type === 'exe') {\r\n            icon = FileIcons.exe;\r\n        }\r\n        else if (type === 'png' || type === 'jpg' || type === 'svg') {\r\n            icon = FileIcons.jpg;\r\n        }\r\n        else if (type === 'html' || type === 'htm') {\r\n            icon = FileIcons.html;\r\n        }\r\n        else if (type === 'pdf') {\r\n            icon = FileIcons.pdf;\r\n        }\r\n        else if (type === 'doc' || type === 'docx') {\r\n            icon = FileIcons.doc;\r\n        }\r\n        else if (type === 'ppt' || type === 'pptx') {\r\n            icon = FileIcons.ppt;\r\n        }\r\n        else if (type === 'xls' || type === 'xlsx') {\r\n            icon = FileIcons.xls;\r\n        }\r\n        else if (type === 'mp3') {\r\n            icon = FileIcons.mp3;\r\n        }\r\n        else if (type === 'json') {\r\n            icon = FileIcons.json;\r\n        }\r\n        else if (type === 'txt') {\r\n            icon = FileIcons.txt;\r\n        }\r\n        else if (type === 'zip' || type === 'gz' || type === 'rar' || type === 'tar') {\r\n            icon = FileIcons.zip;\r\n        }\r\n    }\r\n    return React.createElement(\"img\", { src: icon, className: \"fileicon\" });\r\n}\r\nfunction Files() {\r\n    var parm = react_router_dom_1.useParams();\r\n    var _a = react_1.useState({ error: false, errorMessage: '' }), error = _a[0], setError = _a[1];\r\n    var _b = react_1.useState([]), breadItems = _b[0], setBreadItems = _b[1];\r\n    var _c = react_1.useState({\r\n        loading: false,\r\n        children: []\r\n    }), data = _c[0], setData = _c[1];\r\n    function fetchFiles() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, err_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, api_1.getFiles(parm.baseId, parm.id)];\r\n                    case 1:\r\n                        res = _a.sent();\r\n                        setData({\r\n                            loading: false,\r\n                            children: res.children\r\n                        });\r\n                        setError({\r\n                            error: false,\r\n                            errorMessage: ''\r\n                        });\r\n                        setBreadItems([{ icon: \"folder-open\", text: res.cwd.name, current: true }]);\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        console.log(err_1);\r\n                        console.log(typeof err_1);\r\n                        setError({\r\n                            error: true,\r\n                            errorMessage: err_1\r\n                        });\r\n                        setData({\r\n                            loading: false,\r\n                            children: []\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    react_1.useEffect(function () {\r\n        setData(function (d) {\r\n            return {\r\n                loading: false,\r\n                children: d.children\r\n            };\r\n        });\r\n        fetchFiles();\r\n    }, [parm.baseId, parm.id]);\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(core_1.Alert, { confirmButtonText: \"\\u597D\\u7684\", isOpen: error.error, onClose: function () { return setError({ error: false, errorMessage: '' }); } },\r\n            React.createElement(\"p\", null, error.errorMessage)),\r\n        React.createElement(core_1.Card, { elevation: 0, style: { width: \"100%\" } },\r\n            React.createElement(core_1.Breadcrumbs, { collapseFrom: core_1.Boundary.START, items: breadItems })),\r\n        React.createElement(FilesTable, __assign({}, data))));\r\n}\r\nexports.default = Files;\r\n//# sourceMappingURL=Files.js.map",{"ruleId":"76","severity":1,"message":"77","line":103,"column":12,"nodeType":"78","endLine":103,"endColumn":51},{"ruleId":"79","severity":1,"message":"80","line":148,"column":8,"nodeType":"81","endLine":148,"endColumn":30,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14,"fix":"87"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14,"fix":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14,"fix":"93"},{"ruleId":"94","severity":1,"message":"95","line":13,"column":70,"nodeType":"96","messageId":"97","endLine":13,"endColumn":71},{"ruleId":"94","severity":1,"message":"95","line":18,"column":22,"nodeType":"96","messageId":"97","endLine":18,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":19,"column":22,"nodeType":"96","messageId":"97","endLine":19,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":76,"column":13,"nodeType":"100","messageId":"101","endLine":79,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":88,"column":4,"nodeType":"104","messageId":"105","endLine":88,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14,"fix":"106"},{"ruleId":"94","severity":1,"message":"95","line":24,"column":70,"nodeType":"96","messageId":"97","endLine":24,"endColumn":71},{"ruleId":"94","severity":1,"message":"95","line":29,"column":22,"nodeType":"96","messageId":"97","endLine":29,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":30,"column":22,"nodeType":"96","messageId":"97","endLine":30,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":160,"column":17,"nodeType":"100","messageId":"101","endLine":190,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":162,"column":38,"nodeType":"81","messageId":"109","endLine":162,"endColumn":49},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFiles'. Either include it or remove the dependency array.","ArrayExpression",["110"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"111","text":"112"},{"range":"113","text":"112"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],{"range":"116","text":"112"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'FileType' is assigned a value but never used.","Identifier","unusedVar",{"range":"117","text":"112"},"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",{"desc":"118","fix":"119"},[0,13],"",[0,13],"no-global-assign","no-unsafe-negation",[0,13],[0,13],"Update the dependencies array to be: [fetchFiles, parm.baseId, parm.id]",{"range":"120","text":"121"},[5093,5115],"[fetchFiles, parm.baseId, parm.id]"]